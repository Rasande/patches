@use '../abstracts/variables'as *;

// Respond above.
@mixin mq($breakpoint) {

    @if map-has-key($break, $breakpoint) {

        $breakpoint-value: map-get($break, $breakpoint);

        @media only screen and (min-width: $breakpoint-value) {
            @content;
        }
    }

    @else {
        @warn 'Invalid breakpoint: #{$breakpoint}.';
    }
}

// FLUID TYPE
//
// @example 
// h1 {
//    @include fluid-type(h1, sm, md)
// }
//
@mixin fluid-type($size, $min-range, $max-range) {

    $min-fs-value: map-get($font-sizes-min, $size);
    $max-fs-value: map-get($font-sizes-max, $size);
    $min-range-value: map-get($break, $min-range);
    $max-range-value: map-get($break, $max-range);

    font-size: calc(#{$min-fs-value} + #{(($max-fs-value / ($max-fs-value * 0 + 1)) - ($min-fs-value / ($min-fs-value * 0 + 1)))} * ((100vw - #{$min-range-value}) / #{(($max-range-value / ($max-range-value * 0 + 1)) - ($min-range-value / ($min-range-value * 0 + 1)))}));

    @media screen and (max-width: $min-range-value) {
        font-size: $min-fs-value;
    }

    @media screen and (min-width: $max-range-value) {
        font-size: $max-fs-value;
    }
}

// FLUID TYPE CUSTOM
//
// @example 
// h1 {
//    @include fluid-type-custom(22px, 38px, 600px, 980px)
// }
//
@mixin fluid-type-custom($min-font-size: 12px, $max-font-size: 21px, $lower-range: 420px, $upper-range: 900px) {

    font-size: calc(#{$min-font-size} + #{(($max-font-size / ($max-font-size * 0 + 1)) - ($min-font-size / ($min-font-size * 0 + 1)))} * ((100vw - #{$lower-range}) / #{(($upper-range / ($upper-range * 0 + 1)) - ($lower-range / ($lower-range * 0 + 1)))}));

    @media screen and (max-width: $lower-range) {
        font-size: $min-font-size;
    }

    @media screen and (min-width: $upper-range) {
        font-size: $max-font-size;
    }
}
